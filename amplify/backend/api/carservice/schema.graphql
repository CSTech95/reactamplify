type Cards @model @auth(rules: [{allow: owner}]) {
  id: ID!
  cardNumber: Int
  fName: String
  lName: String
  expMonth: Int
  expYear: Int
  secCode: Int
  address: String
  zip: Int
  city: String
  country: String
  state: String
  userID: ID! @index(name: "byUser")
}

type Payments @model @auth(rules: [{allow: owner}]) {
  id: ID!
  createdAt: AWSDate
  rentalPayment: Rentals @hasOne
  userID: ID! @index(name: "byUser")
}

type Rentals @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  Vehicle: Vehicle @hasOne
  startTime: AWSDate
  endTime: AWSDate
  userID: ID! @index(name: "byUser")
}

enum VehicleTypes {
  SEDAN
  COUPE
  SUV
  TRUCK
  MOTORCYCLE
  VAN
}

enum HelpTypes {
  GENERAL
  BILLING
}

type HelpMemo @model @auth(rules: [{allow: owner}]) {
  id: ID!
  type: String
  description: String
  createdAt: AWSDateTime
  userID: ID! @index(name: "byUser")
}

enum Months {
  JANUARY
  FEBRUARY
  MARCH
  APRIL
  MAY
  JUNE
  JULY
  AUGUST
  SEPTEMBER
  OCTOBER
  NOVEMBER
  DECEMBER
}

type User @model @auth(rules: [{allow: owner}]) {
  id: ID!
  username: String
  firstName: String
  lastName: String
  birthMonth: String
  birthDay: String
  birthYear: String
  phoneNumber: String
  houseNumber: Int
  houseStreet: String
  zip: String
  state: String
  userMemo: [Payments] @hasMany(indexName: "byUser", fields: ["id"])
  town: String
  userRentals: [Payments] @hasMany(indexName: "byUser", fields: ["id"])
  userPayments: [Payments] @hasMany(indexName: "byUser", fields: ["id"])
  userCards: [Payments] @hasMany(indexName: "byUser", fields: ["id"])
  country: String
}

type Vehicle @model @auth(rules: [{allow: owner}]) {
  id: ID!
  make: String
  model: String
  isAvailable: Boolean
  year: Int
  vehicleType: String
  img: String
}
 